- name: 包含 URL 變數
  include_vars:
    file: vars/urls.yml

- name: 建立目錄並進入目錄
  command: mkdir -p /root/rke2-artifacts && cd /root/rke2-artifacts/

- name: 建立 audit log 目錄
  command: mkdir -p /var/log/kube-audit/

- name: 下載 rke2-images.linux-amd64.tar.gz
  command: curl -OLs --max-time 600 "{{ rke2_images_url }}"
  args:
    chdir: /root/rke2-artifacts/
    warn: false
  register: result
  until: result.rc == 0
  retries: 5
  delay: 60
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"
    no_proxy: "{{ no_proxy }}"

- name: 下載 rke2.linux-amd64.tar.gz
  command: curl -OLs --max-time 600 "{{ rke2_binary_url }}"
  args:
    chdir: /root/rke2-artifacts/
    warn: false
  register: result
  until: result.rc == 0
  retries: 5
  delay: 60
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"
    no_proxy: "{{ no_proxy }}"

- name: 下載 sha256sum-amd64.txt
  command: curl -OLs --max-time 600 "{{ rke2_sha256_url }}"
  args:
    chdir: /root/rke2-artifacts/
    warn: false
  register: result
  until: result.rc == 0
  retries: 5
  delay: 60
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"
    no_proxy: "{{ no_proxy }}"

- name: 下載 install.sh
  command: curl -sfL --max-time 600 "{{ rke2_install_url }}" --output install.sh
  args:
    chdir: /root/rke2-artifacts/
    warn: false
  register: result
  until: result.rc == 0
  retries: 5
  delay: 60
  environment:
    http_proxy: "{{ http_proxy }}"
    https_proxy: "{{ https_proxy }}"
    no_proxy: "{{ no_proxy }}"

- name: 設定 install.sh 可執行權限
  command: chmod +x install.sh
  args:
    chdir: /root/rke2-artifacts/

- name: 執行 install.sh
  shell: INSTALL_RKE2_ARTIFACT_PATH=/root/rke2-artifacts http_proxy={{ http_proxy }} https_proxy={{ https_proxy }} no_proxy={{ no_proxy }} /root/rke2-artifacts/install.sh
  args:
    chdir: /root/rke2-artifacts/
    executable: /bin/bash
  async: 600
  poll: 5

- name: 建立 rancher 目錄
  file:
    path: /etc/rancher/rke2
    state: directory
    mode: '0755'

- name: 準備 calico
  file:
    path: /var/lib/rancher/rke2/server/manifests
    state: directory
    mode: '0755'

- name: 建立 rke2-calico-config.yaml
  copy:
    dest: /var/lib/rancher/rke2/server/manifests/rke2-calico-config.yaml
    content: |
      ---
      apiVersion: helm.cattle.io/v1
      kind: HelmChartConfig
      metadata:
        name: rke2-calico
        namespace: kube-system
      spec:
        valuesContent: |-
          installation:
            calicoNetwork:
              mtu: 1450
          updateStrategy:
            type: RollingUpdate
            rollingUpdate:
              maxUnavailable: 1

- name: 建立 sudit log
  copy:
    dest: /etc/rancher/rke2/audit-policy.yaml
    content: |
      ---
      apiVersion: audit.k8s.io/v1
      kind: Policy
      omitStages:
      - "RequestReceived"
      rules:
      - level: RequestResponse
        resources:
        - group: ""
          resources:
          - pods
      # Log "pods/log", "pods/status" at Metadata level
      - level: Metadata
        resources:
        - group: ""
          resources: ["pods/log", "pods/status"]
      # Don't log requests to a configmap called "controller-leader"
      - level: None
        resources:
        - group: ""
          resources: ["configmaps"]
          resourceNames: ["controller-leader"]
      # Don't log watch requests by the "system:kube-proxy" on endpoints or services
      - level: None
        users: ["system:kube-proxy"]
        verbs: ["watch"]
        resources:
        - group: "" # core API group
          resources: ["endpoints", "services"]
      # Don't log authenticated requests to certain non-resource URL paths.
      - level: None
        userGroups: ["system:authenticated"]
        nonResourceURLs:
        - "/api*" # Wildcard matching.
        - "/version"
      # Log the request body of configmap changes in kube-system.
      - level: Request
        resources:
        - group: "" # core API group
          resources: ["configmaps"]
        # This rule only applies to resources in the "kube-system" namespace.
        # The empty string "" can be used to select non-namespaced resources.
        namespaces: ["kube-system"]
      # Log configmap and secret changes in all other namespaces at the Metadata level.
      - level: Metadata
        resources:
        - group: "" # core API group
          resources: ["secrets", "configmaps"]
      # Log all other resources in core and extensions at the Request level.
      - level: Request
        resources:
        - group: "" # core API group
        - group: "extensions" # Version of group should NOT be included.
      # A catch-all rule to log all other requests at the Metadata level.
      - level: Metadata
        # Long-running requests like watches that fall under this rule will not
        # generate an audit event in RequestReceived.
        omitStages:
        - "RequestReceived"

- name: 準備 proxy
  lineinfile:
    dest: /etc/default/rke2-server
    line: "{{ item }}"
  with_items:
    - "HTTP_PROXY={{ http_proxy }}"
    - "HTTPS_PROXY={{ https_proxy }}"
    - "NO_PROXY={{ no_proxy }}"

- name: 準備 ingress nginx
  file:
    path: /var/lib/rancher/rke2/server/manifests
    state: directory
    mode: '0755'

- name: 建立 rke2-metrics-server.yaml
  copy:
    dest: /var/lib/rancher/rke2/server/manifests/rke2-metrics-server-config.yaml
    content: |
      ---
      apiVersion: helm.cattle.io/v1
      kind: HelmChartConfig
      metadata:
        name: rke2-metrics-server
        namespace: kube-system
      spec:
        valuesContent: |-
          priorityClassName: "system-cluster-critical"
          updateStrategy:
            type: RollingUpdate
            rollingUpdate:
              maxUnavailable: 1

- name: 建立 admission-control.yaml
  copy:
    dest: /etc/rancher/rke2/admission-control.yaml
    content: |
      ---
      # /home/ubuntu/admission-control.yaml
      apiVersion: apiserver.config.k8s.io/v1
      kind: AdmissionConfiguration
      plugins:
        - name: EventRateLimit
          path: /etc/rancher/rke2/eventratelimit.yaml

- name: 建立 eventratelimit.yaml
  copy:
    dest: /etc/rancher/rke2/eventratelimit.yaml
    content: |
      ---
      apiVersion: eventratelimit.admission.k8s.io/v1alpha1
      kind: Configuration
      limits:
        - type: Server
          qps: 6000
          burst: 30000

- name: 建立 config.yaml (僅在 controller01 節點上執行)
  copy:
    dest: /etc/rancher/rke2/config.yaml
    content: |
      token: server
      node-name:
        - "control01"
      tls-san:
        - k8s-api.104dc-dev.com
        - 172.24.250.133
      node-taint:
        - "CriticalAddonsOnly=true:NoExecute"
      etcd-extra-env: TZ=Asia/Taipei
      kube-apiserver-extra-env: TZ=Asia/Taipei
      kube-controller-manager-extra-env: TZ=Asia/Taipei
      kube-proxy-extra-env: TZ=Asia/Taipei
      kube-scheduler-extra-env: TZ=Asia/Taipei
      disable-cloud-controller: true
      disable:
        - rke2-ingress-nginx
      kube-controller-manager-arg:
        - "feature-gates=RotateKubeletServerCertificate=true"
      kube-apiserver-arg:
        - "audit-log-maxage=30"
        - "audit-log-maxbackup=30"
        - "audit-log-maxsize=100"
        - "audit-log-format=json"
        - "audit-log-path=/var/log/kube-audit/audit-log.json"
        - "audit-policy-file=/etc/rancher/rke2/audit-policy.yaml"
        - "enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,NodeRestriction,Priority,TaintNodesByCondition,PersistentVolumeClaimResize,AlwaysPullImages,EventRateLimit"
        - "admission-control-config-file=/etc/rancher/rke2/admission-control.yaml"
      kube-apiserver-extra-mount:
        - /etc/rancher/rke2:/etc/rancher/rke2:ro
      kubelet-arg:
        - "protect-kernel-defaults=true"
        - "fail-swap-on=true"
        - "rotate-server-certificates=true"
        - "container-log-max-files=20"
        - "container-log-max-size=20Mi"
        - "kube-reserved=cpu=500m,memory=500Mi,ephemeral-storage=1Gi"
        - "system-reserved=cpu=500m,memory=500Mi,ephemeral-storage=1Gi"
      cni:
        - calico
  when: inventory_hostname == 'controller01'

- name: 啟動 rke2-server 服務 (僅在 controller01 節點上執行)
  systemd:
    name: rke2-server.service
    enabled: yes
    state: started
  when: inventory_hostname == 'controller01'

- name: 取得 token (僅在 controller01 節點上執行)
  command: cat /var/lib/rancher/rke2/server/node-token
  register: node_token
  when: inventory_hostname == 'controller01'

- name: 設定全局 node_token 變數 (僅在 controller01 節點上執行)
  set_fact:
    global_node_token: "{{ node_token.stdout }}"
  when: inventory_hostname == 'controller01' and node_token is defined

- name: 等待 node_token 變數設置完成
  wait_for:
    timeout: 30
  when: inventory_hostname != 'controller01'

- name: 設定其他節點的 config.yaml
  copy:
    dest: /etc/rancher/rke2/config.yaml
    content: |
      server: https://k8s-api.104dc-dev.com:9345
      token: "{{ hostvars['controller01'].global_node_token }}"
      node-name: "control0{{ inventory_hostname[-1] }}"
      tls-san:
        - k8s-api.104dc-dev.com
        - 172.24.250.133
      node-taint:
        - "CriticalAddonsOnly=true:NoExecute"
      etcd-extra-env: TZ=Asia/Taipei
      kube-apiserver-extra-env: TZ=Asia/Taipei
      kube-controller-manager-extra-env: TZ=Asia/Taipei
      kube-proxy-extra-env: TZ=Asia/Taipei
      kube-scheduler-extra-env: TZ=Asia/Taipei
      disable-cloud-controller: true
      disable:
        - rke2-ingress-nginx
      kube-controller-manager-arg:
        - "feature-gates=RotateKubeletServerCertificate=true"
      kube-apiserver-arg:
        - "audit-log-maxage=30"
        - "audit-log-maxbackup=30"
        - "audit-log-maxsize=100"
        - "audit-log-format=json"
        - "audit-log-path=/var/log/kube-audit/audit-log.json"
        - "audit-policy-file=/etc/rancher/rke2/audit-policy.yaml"
        - "enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,NodeRestriction,Priority,TaintNodesByCondition,PersistentVolumeClaimResize,AlwaysPullImages,EventRateLimit"
        - "admission-control-config-file=/etc/rancher/rke2/admission-control.yaml"
      kube-apiserver-extra-mount:
        - /etc/rancher/rke2:/etc/rancher/rke2:ro
      kubelet-arg:
        - "protect-kernel-defaults=true"
        - "fail-swap-on=true"
        - "rotate-server-certificates=true"
        - "container-log-max-files=20"
        - "container-log-max-size=20Mi"
        - "kube-reserved=cpu=500m,memory=500Mi,ephemeral-storage=1Gi"
        - "system-reserved=cpu=500m,memory=500Mi,ephemeral-storage=1Gi"
      cni:
        - calico
  when: hostvars['controller01'].global_node_token is defined and inventory_hostname != 'controller01'

- name: 啟動其他節點的 rke2-server 服務
  systemd:
    name: rke2-server.service
    enabled: yes
    state: started
  when: hostvars['controller01'].global_node_token is defined and inventory_hostname != 'controller01'

